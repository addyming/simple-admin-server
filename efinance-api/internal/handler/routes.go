// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	base "github.com/suyuan32/simple-admin-efinance-api/internal/handler/base"
	emfinancialindicator "github.com/suyuan32/simple-admin-efinance-api/internal/handler/emfinancialindicator"
	emstockbasicinfo "github.com/suyuan32/simple-admin-efinance-api/internal/handler/emstockbasicinfo"
	emstockwatch "github.com/suyuan32/simple-admin-efinance-api/internal/handler/emstockwatch"
	"github.com/suyuan32/simple-admin-efinance-api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/init/database",
				Handler: base.InitDatabaseHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Authority},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/em_financial_indicator/create",
					Handler: emfinancialindicator.CreateEmFinancialIndicatorHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/em_financial_indicator/update",
					Handler: emfinancialindicator.UpdateEmFinancialIndicatorHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/em_financial_indicator/delete",
					Handler: emfinancialindicator.DeleteEmFinancialIndicatorHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/em_financial_indicator/list",
					Handler: emfinancialindicator.GetEmFinancialIndicatorListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/em_financial_indicator",
					Handler: emfinancialindicator.GetEmFinancialIndicatorByIdHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Authority},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/em_stock_basic_info/create",
					Handler: emstockbasicinfo.CreateEmStockBasicInfoHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/em_stock_basic_info/update",
					Handler: emstockbasicinfo.UpdateEmStockBasicInfoHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/em_stock_basic_info/delete",
					Handler: emstockbasicinfo.DeleteEmStockBasicInfoHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/em_stock_basic_info/list",
					Handler: emstockbasicinfo.GetEmStockBasicInfoListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/em_stock_basic_info",
					Handler: emstockbasicinfo.GetEmStockBasicInfoByIdHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Authority},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/em_stock_watch/create",
					Handler: emstockwatch.CreateEmStockWatchHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/em_stock_watch/update",
					Handler: emstockwatch.UpdateEmStockWatchHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/em_stock_watch/delete",
					Handler: emstockwatch.DeleteEmStockWatchHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/em_stock_watch/list",
					Handler: emstockwatch.GetEmStockWatchListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/em_stock_watch",
					Handler: emstockwatch.GetEmStockWatchByIdHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)
}
