// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v4.25.2
// source: efinance.proto

package efinance

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BaseIDInt32Resp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
}

func (x *BaseIDInt32Resp) Reset() {
	*x = BaseIDInt32Resp{}
	mi := &file_efinance_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseIDInt32Resp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseIDInt32Resp) ProtoMessage() {}

func (x *BaseIDInt32Resp) ProtoReflect() protoreflect.Message {
	mi := &file_efinance_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseIDInt32Resp.ProtoReflect.Descriptor instead.
func (*BaseIDInt32Resp) Descriptor() ([]byte, []int) {
	return file_efinance_proto_rawDescGZIP(), []int{0}
}

func (x *BaseIDInt32Resp) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BaseIDInt32Resp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type BaseIDInt64Resp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
}

func (x *BaseIDInt64Resp) Reset() {
	*x = BaseIDInt64Resp{}
	mi := &file_efinance_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseIDInt64Resp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseIDInt64Resp) ProtoMessage() {}

func (x *BaseIDInt64Resp) ProtoReflect() protoreflect.Message {
	mi := &file_efinance_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseIDInt64Resp.ProtoReflect.Descriptor instead.
func (*BaseIDInt64Resp) Descriptor() ([]byte, []int) {
	return file_efinance_proto_rawDescGZIP(), []int{1}
}

func (x *BaseIDInt64Resp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BaseIDInt64Resp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type BaseIDResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
}

func (x *BaseIDResp) Reset() {
	*x = BaseIDResp{}
	mi := &file_efinance_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseIDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseIDResp) ProtoMessage() {}

func (x *BaseIDResp) ProtoReflect() protoreflect.Message {
	mi := &file_efinance_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseIDResp.ProtoReflect.Descriptor instead.
func (*BaseIDResp) Descriptor() ([]byte, []int) {
	return file_efinance_proto_rawDescGZIP(), []int{2}
}

func (x *BaseIDResp) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BaseIDResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type BaseIDStringResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
}

func (x *BaseIDStringResp) Reset() {
	*x = BaseIDStringResp{}
	mi := &file_efinance_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseIDStringResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseIDStringResp) ProtoMessage() {}

func (x *BaseIDStringResp) ProtoReflect() protoreflect.Message {
	mi := &file_efinance_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseIDStringResp.ProtoReflect.Descriptor instead.
func (*BaseIDStringResp) Descriptor() ([]byte, []int) {
	return file_efinance_proto_rawDescGZIP(), []int{3}
}

func (x *BaseIDStringResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BaseIDStringResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type BaseIDUint32Resp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
}

func (x *BaseIDUint32Resp) Reset() {
	*x = BaseIDUint32Resp{}
	mi := &file_efinance_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseIDUint32Resp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseIDUint32Resp) ProtoMessage() {}

func (x *BaseIDUint32Resp) ProtoReflect() protoreflect.Message {
	mi := &file_efinance_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseIDUint32Resp.ProtoReflect.Descriptor instead.
func (*BaseIDUint32Resp) Descriptor() ([]byte, []int) {
	return file_efinance_proto_rawDescGZIP(), []int{4}
}

func (x *BaseIDUint32Resp) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BaseIDUint32Resp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type BaseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg"`
}

func (x *BaseResp) Reset() {
	*x = BaseResp{}
	mi := &file_efinance_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseResp) ProtoMessage() {}

func (x *BaseResp) ProtoReflect() protoreflect.Message {
	mi := &file_efinance_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseResp.ProtoReflect.Descriptor instead.
func (*BaseResp) Descriptor() ([]byte, []int) {
	return file_efinance_proto_rawDescGZIP(), []int{5}
}

func (x *BaseResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type BaseUUIDResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
}

func (x *BaseUUIDResp) Reset() {
	*x = BaseUUIDResp{}
	mi := &file_efinance_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseUUIDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseUUIDResp) ProtoMessage() {}

func (x *BaseUUIDResp) ProtoReflect() protoreflect.Message {
	mi := &file_efinance_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseUUIDResp.ProtoReflect.Descriptor instead.
func (*BaseUUIDResp) Descriptor() ([]byte, []int) {
	return file_efinance_proto_rawDescGZIP(), []int{6}
}

func (x *BaseUUIDResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BaseUUIDResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type EmFinancialIndicatorInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       *int32  `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id"`
	FinancialIndicatorsKey   *string `protobuf:"bytes,2,opt,name=financial_indicators_key,json=financialIndicatorsKey,proto3,oneof" json:"financial_indicators_key"`
	FinancialIndicatorsValue *string `protobuf:"bytes,3,opt,name=financial_indicators_value,json=financialIndicatorsValue,proto3,oneof" json:"financial_indicators_value"`
	FinancialIndicatorsName  *string `protobuf:"bytes,4,opt,name=financial_indicators_name,json=financialIndicatorsName,proto3,oneof" json:"financial_indicators_name"`
	CreateTime               *int64  `protobuf:"varint,5,opt,name=create_time,json=createTime,proto3,oneof" json:"create_time"`
	Remarks                  *string `protobuf:"bytes,6,opt,name=remarks,proto3,oneof" json:"remarks"`
	Status                   *string `protobuf:"bytes,7,opt,name=status,proto3,oneof" json:"status"`
}

func (x *EmFinancialIndicatorInfo) Reset() {
	*x = EmFinancialIndicatorInfo{}
	mi := &file_efinance_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmFinancialIndicatorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmFinancialIndicatorInfo) ProtoMessage() {}

func (x *EmFinancialIndicatorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_efinance_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmFinancialIndicatorInfo.ProtoReflect.Descriptor instead.
func (*EmFinancialIndicatorInfo) Descriptor() ([]byte, []int) {
	return file_efinance_proto_rawDescGZIP(), []int{7}
}

func (x *EmFinancialIndicatorInfo) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *EmFinancialIndicatorInfo) GetFinancialIndicatorsKey() string {
	if x != nil && x.FinancialIndicatorsKey != nil {
		return *x.FinancialIndicatorsKey
	}
	return ""
}

func (x *EmFinancialIndicatorInfo) GetFinancialIndicatorsValue() string {
	if x != nil && x.FinancialIndicatorsValue != nil {
		return *x.FinancialIndicatorsValue
	}
	return ""
}

func (x *EmFinancialIndicatorInfo) GetFinancialIndicatorsName() string {
	if x != nil && x.FinancialIndicatorsName != nil {
		return *x.FinancialIndicatorsName
	}
	return ""
}

func (x *EmFinancialIndicatorInfo) GetCreateTime() int64 {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return 0
}

func (x *EmFinancialIndicatorInfo) GetRemarks() string {
	if x != nil && x.Remarks != nil {
		return *x.Remarks
	}
	return ""
}

func (x *EmFinancialIndicatorInfo) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

type EmFinancialIndicatorListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page                     uint64  `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	PageSize                 uint64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	FinancialIndicatorsKey   *string `protobuf:"bytes,3,opt,name=financial_indicators_key,json=financialIndicatorsKey,proto3,oneof" json:"financial_indicators_key"`
	FinancialIndicatorsValue *string `protobuf:"bytes,4,opt,name=financial_indicators_value,json=financialIndicatorsValue,proto3,oneof" json:"financial_indicators_value"`
	FinancialIndicatorsName  *string `protobuf:"bytes,5,opt,name=financial_indicators_name,json=financialIndicatorsName,proto3,oneof" json:"financial_indicators_name"`
}

func (x *EmFinancialIndicatorListReq) Reset() {
	*x = EmFinancialIndicatorListReq{}
	mi := &file_efinance_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmFinancialIndicatorListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmFinancialIndicatorListReq) ProtoMessage() {}

func (x *EmFinancialIndicatorListReq) ProtoReflect() protoreflect.Message {
	mi := &file_efinance_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmFinancialIndicatorListReq.ProtoReflect.Descriptor instead.
func (*EmFinancialIndicatorListReq) Descriptor() ([]byte, []int) {
	return file_efinance_proto_rawDescGZIP(), []int{8}
}

func (x *EmFinancialIndicatorListReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *EmFinancialIndicatorListReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *EmFinancialIndicatorListReq) GetFinancialIndicatorsKey() string {
	if x != nil && x.FinancialIndicatorsKey != nil {
		return *x.FinancialIndicatorsKey
	}
	return ""
}

func (x *EmFinancialIndicatorListReq) GetFinancialIndicatorsValue() string {
	if x != nil && x.FinancialIndicatorsValue != nil {
		return *x.FinancialIndicatorsValue
	}
	return ""
}

func (x *EmFinancialIndicatorListReq) GetFinancialIndicatorsName() string {
	if x != nil && x.FinancialIndicatorsName != nil {
		return *x.FinancialIndicatorsName
	}
	return ""
}

type EmFinancialIndicatorListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint64                      `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	Data  []*EmFinancialIndicatorInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data"`
}

func (x *EmFinancialIndicatorListResp) Reset() {
	*x = EmFinancialIndicatorListResp{}
	mi := &file_efinance_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmFinancialIndicatorListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmFinancialIndicatorListResp) ProtoMessage() {}

func (x *EmFinancialIndicatorListResp) ProtoReflect() protoreflect.Message {
	mi := &file_efinance_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmFinancialIndicatorListResp.ProtoReflect.Descriptor instead.
func (*EmFinancialIndicatorListResp) Descriptor() ([]byte, []int) {
	return file_efinance_proto_rawDescGZIP(), []int{9}
}

func (x *EmFinancialIndicatorListResp) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *EmFinancialIndicatorListResp) GetData() []*EmFinancialIndicatorInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type EmStockBasicInfoInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *int32  `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id"`
	F1         *string `protobuf:"bytes,2,opt,name=f1,proto3,oneof" json:"f1"`
	F2         *string `protobuf:"bytes,3,opt,name=f2,proto3,oneof" json:"f2"`
	F3         *string `protobuf:"bytes,4,opt,name=f3,proto3,oneof" json:"f3"`
	F4         *string `protobuf:"bytes,5,opt,name=f4,proto3,oneof" json:"f4"`
	F5         *string `protobuf:"bytes,6,opt,name=f5,proto3,oneof" json:"f5"`
	F6         *string `protobuf:"bytes,7,opt,name=f6,proto3,oneof" json:"f6"`
	F7         *string `protobuf:"bytes,8,opt,name=f7,proto3,oneof" json:"f7"`
	F8         *string `protobuf:"bytes,9,opt,name=f8,proto3,oneof" json:"f8"`
	F9         *string `protobuf:"bytes,10,opt,name=f9,proto3,oneof" json:"f9"`
	F10        *string `protobuf:"bytes,11,opt,name=f10,proto3,oneof" json:"f10"`
	F11        *string `protobuf:"bytes,12,opt,name=f11,proto3,oneof" json:"f11"`
	F12        *string `protobuf:"bytes,13,opt,name=f12,proto3,oneof" json:"f12"`
	F13        *string `protobuf:"bytes,14,opt,name=f13,proto3,oneof" json:"f13"`
	F14        *string `protobuf:"bytes,15,opt,name=f14,proto3,oneof" json:"f14"`
	F15        *string `protobuf:"bytes,16,opt,name=f15,proto3,oneof" json:"f15"`
	F16        *string `protobuf:"bytes,17,opt,name=f16,proto3,oneof" json:"f16"`
	F17        *string `protobuf:"bytes,18,opt,name=f17,proto3,oneof" json:"f17"`
	F18        *string `protobuf:"bytes,19,opt,name=f18,proto3,oneof" json:"f18"`
	F19        *string `protobuf:"bytes,20,opt,name=f19,proto3,oneof" json:"f19"`
	F20        *string `protobuf:"bytes,21,opt,name=f20,proto3,oneof" json:"f20"`
	F21        *string `protobuf:"bytes,22,opt,name=f21,proto3,oneof" json:"f21"`
	F22        *string `protobuf:"bytes,23,opt,name=f22,proto3,oneof" json:"f22"`
	F23        *string `protobuf:"bytes,24,opt,name=f23,proto3,oneof" json:"f23"`
	F24        *string `protobuf:"bytes,25,opt,name=f24,proto3,oneof" json:"f24"`
	F25        *string `protobuf:"bytes,26,opt,name=f25,proto3,oneof" json:"f25"`
	F26        *string `protobuf:"bytes,27,opt,name=f26,proto3,oneof" json:"f26"`
	F27        *string `protobuf:"bytes,28,opt,name=f27,proto3,oneof" json:"f27"`
	F28        *string `protobuf:"bytes,29,opt,name=f28,proto3,oneof" json:"f28"`
	F29        *string `protobuf:"bytes,30,opt,name=f29,proto3,oneof" json:"f29"`
	F30        *string `protobuf:"bytes,31,opt,name=f30,proto3,oneof" json:"f30"`
	CreateTime *int64  `protobuf:"varint,32,opt,name=create_time,json=createTime,proto3,oneof" json:"create_time"`
	Remarks    *string `protobuf:"bytes,33,opt,name=remarks,proto3,oneof" json:"remarks"`
	Status     *string `protobuf:"bytes,34,opt,name=status,proto3,oneof" json:"status"`
	St1        *int32  `protobuf:"varint,35,opt,name=st1,proto3,oneof" json:"st1"`
	St2        *int32  `protobuf:"varint,36,opt,name=st2,proto3,oneof" json:"st2"`
	St3        *int32  `protobuf:"varint,37,opt,name=st3,proto3,oneof" json:"st3"`
	St4        *int32  `protobuf:"varint,38,opt,name=st4,proto3,oneof" json:"st4"`
	St5        *int32  `protobuf:"varint,39,opt,name=st5,proto3,oneof" json:"st5"`
}

func (x *EmStockBasicInfoInfo) Reset() {
	*x = EmStockBasicInfoInfo{}
	mi := &file_efinance_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmStockBasicInfoInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmStockBasicInfoInfo) ProtoMessage() {}

func (x *EmStockBasicInfoInfo) ProtoReflect() protoreflect.Message {
	mi := &file_efinance_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmStockBasicInfoInfo.ProtoReflect.Descriptor instead.
func (*EmStockBasicInfoInfo) Descriptor() ([]byte, []int) {
	return file_efinance_proto_rawDescGZIP(), []int{10}
}

func (x *EmStockBasicInfoInfo) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *EmStockBasicInfoInfo) GetF1() string {
	if x != nil && x.F1 != nil {
		return *x.F1
	}
	return ""
}

func (x *EmStockBasicInfoInfo) GetF2() string {
	if x != nil && x.F2 != nil {
		return *x.F2
	}
	return ""
}

func (x *EmStockBasicInfoInfo) GetF3() string {
	if x != nil && x.F3 != nil {
		return *x.F3
	}
	return ""
}

func (x *EmStockBasicInfoInfo) GetF4() string {
	if x != nil && x.F4 != nil {
		return *x.F4
	}
	return ""
}

func (x *EmStockBasicInfoInfo) GetF5() string {
	if x != nil && x.F5 != nil {
		return *x.F5
	}
	return ""
}

func (x *EmStockBasicInfoInfo) GetF6() string {
	if x != nil && x.F6 != nil {
		return *x.F6
	}
	return ""
}

func (x *EmStockBasicInfoInfo) GetF7() string {
	if x != nil && x.F7 != nil {
		return *x.F7
	}
	return ""
}

func (x *EmStockBasicInfoInfo) GetF8() string {
	if x != nil && x.F8 != nil {
		return *x.F8
	}
	return ""
}

func (x *EmStockBasicInfoInfo) GetF9() string {
	if x != nil && x.F9 != nil {
		return *x.F9
	}
	return ""
}

func (x *EmStockBasicInfoInfo) GetF10() string {
	if x != nil && x.F10 != nil {
		return *x.F10
	}
	return ""
}

func (x *EmStockBasicInfoInfo) GetF11() string {
	if x != nil && x.F11 != nil {
		return *x.F11
	}
	return ""
}

func (x *EmStockBasicInfoInfo) GetF12() string {
	if x != nil && x.F12 != nil {
		return *x.F12
	}
	return ""
}

func (x *EmStockBasicInfoInfo) GetF13() string {
	if x != nil && x.F13 != nil {
		return *x.F13
	}
	return ""
}

func (x *EmStockBasicInfoInfo) GetF14() string {
	if x != nil && x.F14 != nil {
		return *x.F14
	}
	return ""
}

func (x *EmStockBasicInfoInfo) GetF15() string {
	if x != nil && x.F15 != nil {
		return *x.F15
	}
	return ""
}

func (x *EmStockBasicInfoInfo) GetF16() string {
	if x != nil && x.F16 != nil {
		return *x.F16
	}
	return ""
}

func (x *EmStockBasicInfoInfo) GetF17() string {
	if x != nil && x.F17 != nil {
		return *x.F17
	}
	return ""
}

func (x *EmStockBasicInfoInfo) GetF18() string {
	if x != nil && x.F18 != nil {
		return *x.F18
	}
	return ""
}

func (x *EmStockBasicInfoInfo) GetF19() string {
	if x != nil && x.F19 != nil {
		return *x.F19
	}
	return ""
}

func (x *EmStockBasicInfoInfo) GetF20() string {
	if x != nil && x.F20 != nil {
		return *x.F20
	}
	return ""
}

func (x *EmStockBasicInfoInfo) GetF21() string {
	if x != nil && x.F21 != nil {
		return *x.F21
	}
	return ""
}

func (x *EmStockBasicInfoInfo) GetF22() string {
	if x != nil && x.F22 != nil {
		return *x.F22
	}
	return ""
}

func (x *EmStockBasicInfoInfo) GetF23() string {
	if x != nil && x.F23 != nil {
		return *x.F23
	}
	return ""
}

func (x *EmStockBasicInfoInfo) GetF24() string {
	if x != nil && x.F24 != nil {
		return *x.F24
	}
	return ""
}

func (x *EmStockBasicInfoInfo) GetF25() string {
	if x != nil && x.F25 != nil {
		return *x.F25
	}
	return ""
}

func (x *EmStockBasicInfoInfo) GetF26() string {
	if x != nil && x.F26 != nil {
		return *x.F26
	}
	return ""
}

func (x *EmStockBasicInfoInfo) GetF27() string {
	if x != nil && x.F27 != nil {
		return *x.F27
	}
	return ""
}

func (x *EmStockBasicInfoInfo) GetF28() string {
	if x != nil && x.F28 != nil {
		return *x.F28
	}
	return ""
}

func (x *EmStockBasicInfoInfo) GetF29() string {
	if x != nil && x.F29 != nil {
		return *x.F29
	}
	return ""
}

func (x *EmStockBasicInfoInfo) GetF30() string {
	if x != nil && x.F30 != nil {
		return *x.F30
	}
	return ""
}

func (x *EmStockBasicInfoInfo) GetCreateTime() int64 {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return 0
}

func (x *EmStockBasicInfoInfo) GetRemarks() string {
	if x != nil && x.Remarks != nil {
		return *x.Remarks
	}
	return ""
}

func (x *EmStockBasicInfoInfo) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *EmStockBasicInfoInfo) GetSt1() int32 {
	if x != nil && x.St1 != nil {
		return *x.St1
	}
	return 0
}

func (x *EmStockBasicInfoInfo) GetSt2() int32 {
	if x != nil && x.St2 != nil {
		return *x.St2
	}
	return 0
}

func (x *EmStockBasicInfoInfo) GetSt3() int32 {
	if x != nil && x.St3 != nil {
		return *x.St3
	}
	return 0
}

func (x *EmStockBasicInfoInfo) GetSt4() int32 {
	if x != nil && x.St4 != nil {
		return *x.St4
	}
	return 0
}

func (x *EmStockBasicInfoInfo) GetSt5() int32 {
	if x != nil && x.St5 != nil {
		return *x.St5
	}
	return 0
}

type EmStockBasicInfoListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     uint64  `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	PageSize uint64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	F1       *string `protobuf:"bytes,3,opt,name=f1,proto3,oneof" json:"f1"`
	F2       *string `protobuf:"bytes,4,opt,name=f2,proto3,oneof" json:"f2"`
	F3       *string `protobuf:"bytes,5,opt,name=f3,proto3,oneof" json:"f3"`
}

func (x *EmStockBasicInfoListReq) Reset() {
	*x = EmStockBasicInfoListReq{}
	mi := &file_efinance_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmStockBasicInfoListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmStockBasicInfoListReq) ProtoMessage() {}

func (x *EmStockBasicInfoListReq) ProtoReflect() protoreflect.Message {
	mi := &file_efinance_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmStockBasicInfoListReq.ProtoReflect.Descriptor instead.
func (*EmStockBasicInfoListReq) Descriptor() ([]byte, []int) {
	return file_efinance_proto_rawDescGZIP(), []int{11}
}

func (x *EmStockBasicInfoListReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *EmStockBasicInfoListReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *EmStockBasicInfoListReq) GetF1() string {
	if x != nil && x.F1 != nil {
		return *x.F1
	}
	return ""
}

func (x *EmStockBasicInfoListReq) GetF2() string {
	if x != nil && x.F2 != nil {
		return *x.F2
	}
	return ""
}

func (x *EmStockBasicInfoListReq) GetF3() string {
	if x != nil && x.F3 != nil {
		return *x.F3
	}
	return ""
}

type EmStockBasicInfoListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint64                  `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	Data  []*EmStockBasicInfoInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data"`
}

func (x *EmStockBasicInfoListResp) Reset() {
	*x = EmStockBasicInfoListResp{}
	mi := &file_efinance_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmStockBasicInfoListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmStockBasicInfoListResp) ProtoMessage() {}

func (x *EmStockBasicInfoListResp) ProtoReflect() protoreflect.Message {
	mi := &file_efinance_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmStockBasicInfoListResp.ProtoReflect.Descriptor instead.
func (*EmStockBasicInfoListResp) Descriptor() ([]byte, []int) {
	return file_efinance_proto_rawDescGZIP(), []int{12}
}

func (x *EmStockBasicInfoListResp) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *EmStockBasicInfoListResp) GetData() []*EmStockBasicInfoInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type EmStockWatchInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   *int32  `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id"`
	StockWatchCode       *string `protobuf:"bytes,2,opt,name=stock_watch_code,json=stockWatchCode,proto3,oneof" json:"stock_watch_code"`
	StockWatchName       *string `protobuf:"bytes,3,opt,name=stock_watch_name,json=stockWatchName,proto3,oneof" json:"stock_watch_name"`
	StockWatchUpPrice    *string `protobuf:"bytes,4,opt,name=stock_watch_up_price,json=stockWatchUpPrice,proto3,oneof" json:"stock_watch_up_price"`
	StockWatchFallPrice  *string `protobuf:"bytes,5,opt,name=stock_watch_fall_price,json=stockWatchFallPrice,proto3,oneof" json:"stock_watch_fall_price"`
	StockWatchUpChange   *string `protobuf:"bytes,6,opt,name=stock_watch_up_change,json=stockWatchUpChange,proto3,oneof" json:"stock_watch_up_change"`
	StockWatchFallChange *string `protobuf:"bytes,7,opt,name=stock_watch_fall_change,json=stockWatchFallChange,proto3,oneof" json:"stock_watch_fall_change"`
}

func (x *EmStockWatchInfo) Reset() {
	*x = EmStockWatchInfo{}
	mi := &file_efinance_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmStockWatchInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmStockWatchInfo) ProtoMessage() {}

func (x *EmStockWatchInfo) ProtoReflect() protoreflect.Message {
	mi := &file_efinance_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmStockWatchInfo.ProtoReflect.Descriptor instead.
func (*EmStockWatchInfo) Descriptor() ([]byte, []int) {
	return file_efinance_proto_rawDescGZIP(), []int{13}
}

func (x *EmStockWatchInfo) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *EmStockWatchInfo) GetStockWatchCode() string {
	if x != nil && x.StockWatchCode != nil {
		return *x.StockWatchCode
	}
	return ""
}

func (x *EmStockWatchInfo) GetStockWatchName() string {
	if x != nil && x.StockWatchName != nil {
		return *x.StockWatchName
	}
	return ""
}

func (x *EmStockWatchInfo) GetStockWatchUpPrice() string {
	if x != nil && x.StockWatchUpPrice != nil {
		return *x.StockWatchUpPrice
	}
	return ""
}

func (x *EmStockWatchInfo) GetStockWatchFallPrice() string {
	if x != nil && x.StockWatchFallPrice != nil {
		return *x.StockWatchFallPrice
	}
	return ""
}

func (x *EmStockWatchInfo) GetStockWatchUpChange() string {
	if x != nil && x.StockWatchUpChange != nil {
		return *x.StockWatchUpChange
	}
	return ""
}

func (x *EmStockWatchInfo) GetStockWatchFallChange() string {
	if x != nil && x.StockWatchFallChange != nil {
		return *x.StockWatchFallChange
	}
	return ""
}

type EmStockWatchListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page              uint64  `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	PageSize          uint64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	StockWatchCode    *string `protobuf:"bytes,3,opt,name=stock_watch_code,json=stockWatchCode,proto3,oneof" json:"stock_watch_code"`
	StockWatchName    *string `protobuf:"bytes,4,opt,name=stock_watch_name,json=stockWatchName,proto3,oneof" json:"stock_watch_name"`
	StockWatchUpPrice *string `protobuf:"bytes,5,opt,name=stock_watch_up_price,json=stockWatchUpPrice,proto3,oneof" json:"stock_watch_up_price"`
}

func (x *EmStockWatchListReq) Reset() {
	*x = EmStockWatchListReq{}
	mi := &file_efinance_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmStockWatchListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmStockWatchListReq) ProtoMessage() {}

func (x *EmStockWatchListReq) ProtoReflect() protoreflect.Message {
	mi := &file_efinance_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmStockWatchListReq.ProtoReflect.Descriptor instead.
func (*EmStockWatchListReq) Descriptor() ([]byte, []int) {
	return file_efinance_proto_rawDescGZIP(), []int{14}
}

func (x *EmStockWatchListReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *EmStockWatchListReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *EmStockWatchListReq) GetStockWatchCode() string {
	if x != nil && x.StockWatchCode != nil {
		return *x.StockWatchCode
	}
	return ""
}

func (x *EmStockWatchListReq) GetStockWatchName() string {
	if x != nil && x.StockWatchName != nil {
		return *x.StockWatchName
	}
	return ""
}

func (x *EmStockWatchListReq) GetStockWatchUpPrice() string {
	if x != nil && x.StockWatchUpPrice != nil {
		return *x.StockWatchUpPrice
	}
	return ""
}

type EmStockWatchListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint64              `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	Data  []*EmStockWatchInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data"`
}

func (x *EmStockWatchListResp) Reset() {
	*x = EmStockWatchListResp{}
	mi := &file_efinance_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmStockWatchListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmStockWatchListResp) ProtoMessage() {}

func (x *EmStockWatchListResp) ProtoReflect() protoreflect.Message {
	mi := &file_efinance_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmStockWatchListResp.ProtoReflect.Descriptor instead.
func (*EmStockWatchListResp) Descriptor() ([]byte, []int) {
	return file_efinance_proto_rawDescGZIP(), []int{15}
}

func (x *EmStockWatchListResp) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *EmStockWatchListResp) GetData() []*EmStockWatchInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// base message
type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_efinance_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_efinance_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_efinance_proto_rawDescGZIP(), []int{16}
}

type IDInt32Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *IDInt32Req) Reset() {
	*x = IDInt32Req{}
	mi := &file_efinance_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IDInt32Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDInt32Req) ProtoMessage() {}

func (x *IDInt32Req) ProtoReflect() protoreflect.Message {
	mi := &file_efinance_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDInt32Req.ProtoReflect.Descriptor instead.
func (*IDInt32Req) Descriptor() ([]byte, []int) {
	return file_efinance_proto_rawDescGZIP(), []int{17}
}

func (x *IDInt32Req) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type IDInt64Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *IDInt64Req) Reset() {
	*x = IDInt64Req{}
	mi := &file_efinance_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IDInt64Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDInt64Req) ProtoMessage() {}

func (x *IDInt64Req) ProtoReflect() protoreflect.Message {
	mi := &file_efinance_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDInt64Req.ProtoReflect.Descriptor instead.
func (*IDInt64Req) Descriptor() ([]byte, []int) {
	return file_efinance_proto_rawDescGZIP(), []int{18}
}

func (x *IDInt64Req) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type IDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *IDReq) Reset() {
	*x = IDReq{}
	mi := &file_efinance_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDReq) ProtoMessage() {}

func (x *IDReq) ProtoReflect() protoreflect.Message {
	mi := &file_efinance_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDReq.ProtoReflect.Descriptor instead.
func (*IDReq) Descriptor() ([]byte, []int) {
	return file_efinance_proto_rawDescGZIP(), []int{19}
}

func (x *IDReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type IDStringReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *IDStringReq) Reset() {
	*x = IDStringReq{}
	mi := &file_efinance_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IDStringReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDStringReq) ProtoMessage() {}

func (x *IDStringReq) ProtoReflect() protoreflect.Message {
	mi := &file_efinance_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDStringReq.ProtoReflect.Descriptor instead.
func (*IDStringReq) Descriptor() ([]byte, []int) {
	return file_efinance_proto_rawDescGZIP(), []int{20}
}

func (x *IDStringReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type IDUint32Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *IDUint32Req) Reset() {
	*x = IDUint32Req{}
	mi := &file_efinance_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IDUint32Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDUint32Req) ProtoMessage() {}

func (x *IDUint32Req) ProtoReflect() protoreflect.Message {
	mi := &file_efinance_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDUint32Req.ProtoReflect.Descriptor instead.
func (*IDUint32Req) Descriptor() ([]byte, []int) {
	return file_efinance_proto_rawDescGZIP(), []int{21}
}

func (x *IDUint32Req) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type IDsInt32Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids"`
}

func (x *IDsInt32Req) Reset() {
	*x = IDsInt32Req{}
	mi := &file_efinance_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IDsInt32Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDsInt32Req) ProtoMessage() {}

func (x *IDsInt32Req) ProtoReflect() protoreflect.Message {
	mi := &file_efinance_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDsInt32Req.ProtoReflect.Descriptor instead.
func (*IDsInt32Req) Descriptor() ([]byte, []int) {
	return file_efinance_proto_rawDescGZIP(), []int{22}
}

func (x *IDsInt32Req) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type IDsInt64Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids"`
}

func (x *IDsInt64Req) Reset() {
	*x = IDsInt64Req{}
	mi := &file_efinance_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IDsInt64Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDsInt64Req) ProtoMessage() {}

func (x *IDsInt64Req) ProtoReflect() protoreflect.Message {
	mi := &file_efinance_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDsInt64Req.ProtoReflect.Descriptor instead.
func (*IDsInt64Req) Descriptor() ([]byte, []int) {
	return file_efinance_proto_rawDescGZIP(), []int{23}
}

func (x *IDsInt64Req) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type IDsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids"`
}

func (x *IDsReq) Reset() {
	*x = IDsReq{}
	mi := &file_efinance_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IDsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDsReq) ProtoMessage() {}

func (x *IDsReq) ProtoReflect() protoreflect.Message {
	mi := &file_efinance_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDsReq.ProtoReflect.Descriptor instead.
func (*IDsReq) Descriptor() ([]byte, []int) {
	return file_efinance_proto_rawDescGZIP(), []int{24}
}

func (x *IDsReq) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type IDsStringReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids"`
}

func (x *IDsStringReq) Reset() {
	*x = IDsStringReq{}
	mi := &file_efinance_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IDsStringReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDsStringReq) ProtoMessage() {}

func (x *IDsStringReq) ProtoReflect() protoreflect.Message {
	mi := &file_efinance_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDsStringReq.ProtoReflect.Descriptor instead.
func (*IDsStringReq) Descriptor() ([]byte, []int) {
	return file_efinance_proto_rawDescGZIP(), []int{25}
}

func (x *IDsStringReq) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type IDsUint32Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids"`
}

func (x *IDsUint32Req) Reset() {
	*x = IDsUint32Req{}
	mi := &file_efinance_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IDsUint32Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDsUint32Req) ProtoMessage() {}

func (x *IDsUint32Req) ProtoReflect() protoreflect.Message {
	mi := &file_efinance_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDsUint32Req.ProtoReflect.Descriptor instead.
func (*IDsUint32Req) Descriptor() ([]byte, []int) {
	return file_efinance_proto_rawDescGZIP(), []int{26}
}

func (x *IDsUint32Req) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type PageInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	PageSize uint64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
}

func (x *PageInfoReq) Reset() {
	*x = PageInfoReq{}
	mi := &file_efinance_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageInfoReq) ProtoMessage() {}

func (x *PageInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_efinance_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageInfoReq.ProtoReflect.Descriptor instead.
func (*PageInfoReq) Descriptor() ([]byte, []int) {
	return file_efinance_proto_rawDescGZIP(), []int{27}
}

func (x *PageInfoReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageInfoReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type UUIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *UUIDReq) Reset() {
	*x = UUIDReq{}
	mi := &file_efinance_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UUIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UUIDReq) ProtoMessage() {}

func (x *UUIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_efinance_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UUIDReq.ProtoReflect.Descriptor instead.
func (*UUIDReq) Descriptor() ([]byte, []int) {
	return file_efinance_proto_rawDescGZIP(), []int{28}
}

func (x *UUIDReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UUIDsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids"`
}

func (x *UUIDsReq) Reset() {
	*x = UUIDsReq{}
	mi := &file_efinance_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UUIDsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UUIDsReq) ProtoMessage() {}

func (x *UUIDsReq) ProtoReflect() protoreflect.Message {
	mi := &file_efinance_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UUIDsReq.ProtoReflect.Descriptor instead.
func (*UUIDsReq) Descriptor() ([]byte, []int) {
	return file_efinance_proto_rawDescGZIP(), []int{29}
}

func (x *UUIDsReq) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

var File_efinance_proto protoreflect.FileDescriptor

var file_efinance_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x65, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x65, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x33, 0x0a, 0x0f, 0x42, 0x61,
	0x73, 0x65, 0x49, 0x44, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22,
	0x33, 0x0a, 0x0f, 0x42, 0x61, 0x73, 0x65, 0x49, 0x44, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x22, 0x2e, 0x0a, 0x0a, 0x42, 0x61, 0x73, 0x65, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x22, 0x34, 0x0a, 0x10, 0x42, 0x61, 0x73, 0x65, 0x49, 0x44, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x34, 0x0a, 0x10, 0x42, 0x61,
	0x73, 0x65, 0x49, 0x44, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x1c, 0x0a, 0x08, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x30,
	0x0a, 0x0c, 0x42, 0x61, 0x73, 0x65, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0xdc, 0x03, 0x0a, 0x18, 0x45, 0x6d, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x3d, 0x0a, 0x18, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x5f,
	0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x16, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61,
	0x6c, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x4b, 0x65, 0x79, 0x88, 0x01,
	0x01, 0x12, 0x41, 0x0a, 0x1a, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x18, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69,
	0x61, 0x6c, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a, 0x19, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61,
	0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x17, 0x66, 0x69, 0x6e, 0x61, 0x6e,
	0x63, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x04, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x07,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x1b,
	0x0a, 0x19, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x42, 0x1d, 0x0a, 0x1b, 0x5f,
	0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x1c, 0x0a, 0x1a, 0x5f, 0x66,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0xeb, 0x02, 0x0a, 0x1b, 0x45, 0x6d, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x3d, 0x0a, 0x18, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x16, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x4b, 0x65, 0x79, 0x88, 0x01, 0x01, 0x12,
	0x41, 0x0a, 0x1a, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x18, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x3f, 0x0a, 0x19, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x5f,
	0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x17, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69,
	0x61, 0x6c, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61,
	0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x5f, 0x6b, 0x65, 0x79,
	0x42, 0x1d, 0x0a, 0x1b, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42,
	0x1c, 0x0a, 0x1a, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x6c, 0x0a,
	0x1c, 0x45, 0x6d, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x65, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x46,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xdd, 0x09, 0x0a, 0x14,
	0x45, 0x6d, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x66, 0x31, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x02, 0x66, 0x31, 0x88, 0x01, 0x01, 0x12, 0x13,
	0x0a, 0x02, 0x66, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x02, 0x66, 0x32,
	0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x66, 0x33, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x03, 0x52, 0x02, 0x66, 0x33, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x66, 0x34, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x02, 0x66, 0x34, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a,
	0x02, 0x66, 0x35, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x02, 0x66, 0x35, 0x88,
	0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x66, 0x36, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06,
	0x52, 0x02, 0x66, 0x36, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x66, 0x37, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x02, 0x66, 0x37, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02,
	0x66, 0x38, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x02, 0x66, 0x38, 0x88, 0x01,
	0x01, 0x12, 0x13, 0x0a, 0x02, 0x66, 0x39, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52,
	0x02, 0x66, 0x39, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x66, 0x31, 0x30, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x03, 0x66, 0x31, 0x30, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a,
	0x03, 0x66, 0x31, 0x31, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x03, 0x66, 0x31,
	0x31, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x66, 0x31, 0x32, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0c, 0x52, 0x03, 0x66, 0x31, 0x32, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x66,
	0x31, 0x33, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x03, 0x66, 0x31, 0x33, 0x88,
	0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x66, 0x31, 0x34, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x0e, 0x52, 0x03, 0x66, 0x31, 0x34, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x66, 0x31, 0x35,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0f, 0x52, 0x03, 0x66, 0x31, 0x35, 0x88, 0x01, 0x01,
	0x12, 0x15, 0x0a, 0x03, 0x66, 0x31, 0x36, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x10, 0x52,
	0x03, 0x66, 0x31, 0x36, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x66, 0x31, 0x37, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x11, 0x52, 0x03, 0x66, 0x31, 0x37, 0x88, 0x01, 0x01, 0x12, 0x15,
	0x0a, 0x03, 0x66, 0x31, 0x38, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x12, 0x52, 0x03, 0x66,
	0x31, 0x38, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x66, 0x31, 0x39, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x13, 0x52, 0x03, 0x66, 0x31, 0x39, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03,
	0x66, 0x32, 0x30, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x14, 0x52, 0x03, 0x66, 0x32, 0x30,
	0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x66, 0x32, 0x31, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x15, 0x52, 0x03, 0x66, 0x32, 0x31, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x66, 0x32,
	0x32, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x48, 0x16, 0x52, 0x03, 0x66, 0x32, 0x32, 0x88, 0x01,
	0x01, 0x12, 0x15, 0x0a, 0x03, 0x66, 0x32, 0x33, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x48, 0x17,
	0x52, 0x03, 0x66, 0x32, 0x33, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x66, 0x32, 0x34, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x09, 0x48, 0x18, 0x52, 0x03, 0x66, 0x32, 0x34, 0x88, 0x01, 0x01, 0x12,
	0x15, 0x0a, 0x03, 0x66, 0x32, 0x35, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x19, 0x52, 0x03,
	0x66, 0x32, 0x35, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x66, 0x32, 0x36, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x1a, 0x52, 0x03, 0x66, 0x32, 0x36, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a,
	0x03, 0x66, 0x32, 0x37, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x1b, 0x52, 0x03, 0x66, 0x32,
	0x37, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x66, 0x32, 0x38, 0x18, 0x1d, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x1c, 0x52, 0x03, 0x66, 0x32, 0x38, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x66,
	0x32, 0x39, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x1d, 0x52, 0x03, 0x66, 0x32, 0x39, 0x88,
	0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x66, 0x33, 0x30, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x1e, 0x52, 0x03, 0x66, 0x33, 0x30, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x03, 0x48, 0x1f,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x1d, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x20, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1b,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x48, 0x21,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x73,
	0x74, 0x31, 0x18, 0x23, 0x20, 0x01, 0x28, 0x05, 0x48, 0x22, 0x52, 0x03, 0x73, 0x74, 0x31, 0x88,
	0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x73, 0x74, 0x32, 0x18, 0x24, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x23, 0x52, 0x03, 0x73, 0x74, 0x32, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x73, 0x74, 0x33,
	0x18, 0x25, 0x20, 0x01, 0x28, 0x05, 0x48, 0x24, 0x52, 0x03, 0x73, 0x74, 0x33, 0x88, 0x01, 0x01,
	0x12, 0x15, 0x0a, 0x03, 0x73, 0x74, 0x34, 0x18, 0x26, 0x20, 0x01, 0x28, 0x05, 0x48, 0x25, 0x52,
	0x03, 0x73, 0x74, 0x34, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x73, 0x74, 0x35, 0x18, 0x27,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x26, 0x52, 0x03, 0x73, 0x74, 0x35, 0x88, 0x01, 0x01, 0x42, 0x05,
	0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x66, 0x31, 0x42, 0x05, 0x0a, 0x03,
	0x5f, 0x66, 0x32, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x66, 0x33, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x66,
	0x34, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x66, 0x35, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x66, 0x36, 0x42,
	0x05, 0x0a, 0x03, 0x5f, 0x66, 0x37, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x66, 0x38, 0x42, 0x05, 0x0a,
	0x03, 0x5f, 0x66, 0x39, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x66, 0x31, 0x30, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x66, 0x31, 0x31, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x66, 0x31, 0x32, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x66, 0x31, 0x33, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x66, 0x31, 0x34, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x66, 0x31, 0x35, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x66, 0x31, 0x36, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x66, 0x31, 0x37, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x66, 0x31, 0x38, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x66, 0x31, 0x39, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x66, 0x32, 0x30, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x66, 0x32, 0x31, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x66, 0x32, 0x32, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x66, 0x32, 0x33, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x66, 0x32, 0x34, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x66, 0x32, 0x35, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x66, 0x32, 0x36, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x66, 0x32, 0x37, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x66, 0x32, 0x38, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x66, 0x32, 0x39, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x66, 0x33, 0x30, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x73, 0x74, 0x31, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x73, 0x74, 0x32, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x73, 0x74, 0x33, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x73, 0x74, 0x34, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x73, 0x74, 0x35, 0x22, 0x9e, 0x01, 0x0a, 0x17,
	0x45, 0x6d, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x13, 0x0a, 0x02, 0x66, 0x31, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x66, 0x31, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a,
	0x02, 0x66, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x02, 0x66, 0x32, 0x88,
	0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x66, 0x33, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x02, 0x66, 0x33, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x66, 0x31, 0x42, 0x05,
	0x0a, 0x03, 0x5f, 0x66, 0x32, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x66, 0x33, 0x22, 0x64, 0x0a, 0x18,
	0x45, 0x6d, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x32,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65,
	0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x84, 0x04, 0x0a, 0x10, 0x45, 0x6d, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x14, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x75, 0x70, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x11, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x57, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x38, 0x0a, 0x16, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x66, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x04, 0x52, 0x13, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x74, 0x63, 0x68, 0x46, 0x61,
	0x6c, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x15, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x75, 0x70, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x12, 0x73, 0x74, 0x6f,
	0x63, 0x6b, 0x57, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x3a, 0x0a, 0x17, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x66, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x14, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x46, 0x61, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x05,
	0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42,
	0x17, 0x0a, 0x15, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x75, 0x70, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x73, 0x74, 0x6f,
	0x63, 0x6b, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x66, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x77, 0x61,
	0x74, 0x63, 0x68, 0x5f, 0x75, 0x70, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x1a, 0x0a,
	0x18, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x66, 0x61,
	0x6c, 0x6c, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x9d, 0x02, 0x0a, 0x13, 0x45, 0x6d,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x2d, 0x0a, 0x10, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x2d, 0x0a, 0x10, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0e, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x34, 0x0a, 0x14, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x75, 0x70, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x11, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x5f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x17, 0x0a, 0x15, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x75, 0x70, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x5c, 0x0a, 0x14, 0x45, 0x6d, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x45, 0x6d, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x1c, 0x0a, 0x0a, 0x49, 0x44, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1c,
	0x0a, 0x0a, 0x49, 0x44, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x17, 0x0a, 0x05,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1d, 0x0a, 0x0b, 0x49, 0x44, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x1d, 0x0a, 0x0b, 0x49, 0x44, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x1f, 0x0a, 0x0b, 0x49, 0x44, 0x73, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x22, 0x1f, 0x0a, 0x0b, 0x49, 0x44, 0x73, 0x49, 0x6e, 0x74, 0x36, 0x34,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x1a, 0x0a, 0x06, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x03, 0x69, 0x64,
	0x73, 0x22, 0x20, 0x0a, 0x0c, 0x49, 0x44, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03,
	0x69, 0x64, 0x73, 0x22, 0x20, 0x0a, 0x0c, 0x49, 0x44, 0x73, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x3e, 0x0a, 0x0b, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x19, 0x0a, 0x07, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x1c, 0x0a, 0x08, 0x55, 0x55, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x32, 0x90,
	0x0a, 0x0a, 0x08, 0x45, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x0c, 0x69,
	0x6e, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x0f, 0x2e, 0x65, 0x66,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x12, 0x2e, 0x65,
	0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x5b, 0x0a, 0x1a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x46, 0x69, 0x6e, 0x61,
	0x6e, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x22,
	0x2e, 0x65, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x46, 0x69, 0x6e, 0x61,
	0x6e, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x1a, 0x19, 0x2e, 0x65, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x49, 0x44, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a,
	0x1a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69,
	0x61, 0x6c, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x22, 0x2e, 0x65, 0x66,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69,
	0x61, 0x6c, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0x12, 0x2e, 0x65, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x6c, 0x0a, 0x1b, 0x67, 0x65, 0x74, 0x45, 0x6d, 0x46, 0x69, 0x6e, 0x61,
	0x6e, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x25, 0x2e, 0x65, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x45, 0x6d,
	0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x65, 0x66, 0x69, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x57, 0x0a, 0x1b, 0x67, 0x65, 0x74, 0x45, 0x6d, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63,
	0x69, 0x61, 0x6c, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x79, 0x49, 0x64,
	0x12, 0x14, 0x2e, 0x65, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x49, 0x44, 0x49, 0x6e,
	0x74, 0x33, 0x32, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x65, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x2e, 0x45, 0x6d, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x47, 0x0a, 0x1a, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x45, 0x6d, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x15, 0x2e, 0x65, 0x66, 0x69, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x49, 0x44, 0x73, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x65, 0x71, 0x1a,
	0x12, 0x2e, 0x65, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x16, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x2e,
	0x65, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x19, 0x2e,
	0x65, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x44, 0x49,
	0x6e, 0x74, 0x33, 0x32, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x16, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x45, 0x6d, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1e, 0x2e, 0x65, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x45, 0x6d,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e,
	0x66, 0x6f, 0x1a, 0x12, 0x2e, 0x65, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x17, 0x67, 0x65, 0x74, 0x45, 0x6d, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x21, 0x2e, 0x65, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x65, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x45, 0x6d, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x17, 0x67, 0x65, 0x74, 0x45,
	0x6d, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x79, 0x49, 0x64, 0x12, 0x14, 0x2e, 0x65, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x49,
	0x44, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x65, 0x66, 0x69, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x43, 0x0a, 0x16, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x45, 0x6d, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x15, 0x2e, 0x65, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x49,
	0x44, 0x73, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x65, 0x66, 0x69,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b,
	0x0a, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x12, 0x1a, 0x2e, 0x65, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x45, 0x6d, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0x19, 0x2e, 0x65, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x49, 0x44, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x12, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x12, 0x1a, 0x2e, 0x65, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x12, 0x2e,
	0x65, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x54, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x45, 0x6d, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x65, 0x66, 0x69, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x65, 0x66, 0x69, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x45, 0x6d, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x45, 0x6d,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x74, 0x63, 0x68, 0x42, 0x79, 0x49, 0x64, 0x12, 0x14,
	0x2e, 0x65, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x49, 0x44, 0x49, 0x6e, 0x74, 0x33,
	0x32, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x65, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x45, 0x6d, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x3f, 0x0a, 0x12, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6d, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x57, 0x61, 0x74, 0x63, 0x68, 0x12, 0x15, 0x2e, 0x65, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x2e, 0x49, 0x44, 0x73, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e,
	0x65, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x65, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_efinance_proto_rawDescOnce sync.Once
	file_efinance_proto_rawDescData = file_efinance_proto_rawDesc
)

func file_efinance_proto_rawDescGZIP() []byte {
	file_efinance_proto_rawDescOnce.Do(func() {
		file_efinance_proto_rawDescData = protoimpl.X.CompressGZIP(file_efinance_proto_rawDescData)
	})
	return file_efinance_proto_rawDescData
}

var file_efinance_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_efinance_proto_goTypes = []any{
	(*BaseIDInt32Resp)(nil),              // 0: efinance.BaseIDInt32Resp
	(*BaseIDInt64Resp)(nil),              // 1: efinance.BaseIDInt64Resp
	(*BaseIDResp)(nil),                   // 2: efinance.BaseIDResp
	(*BaseIDStringResp)(nil),             // 3: efinance.BaseIDStringResp
	(*BaseIDUint32Resp)(nil),             // 4: efinance.BaseIDUint32Resp
	(*BaseResp)(nil),                     // 5: efinance.BaseResp
	(*BaseUUIDResp)(nil),                 // 6: efinance.BaseUUIDResp
	(*EmFinancialIndicatorInfo)(nil),     // 7: efinance.EmFinancialIndicatorInfo
	(*EmFinancialIndicatorListReq)(nil),  // 8: efinance.EmFinancialIndicatorListReq
	(*EmFinancialIndicatorListResp)(nil), // 9: efinance.EmFinancialIndicatorListResp
	(*EmStockBasicInfoInfo)(nil),         // 10: efinance.EmStockBasicInfoInfo
	(*EmStockBasicInfoListReq)(nil),      // 11: efinance.EmStockBasicInfoListReq
	(*EmStockBasicInfoListResp)(nil),     // 12: efinance.EmStockBasicInfoListResp
	(*EmStockWatchInfo)(nil),             // 13: efinance.EmStockWatchInfo
	(*EmStockWatchListReq)(nil),          // 14: efinance.EmStockWatchListReq
	(*EmStockWatchListResp)(nil),         // 15: efinance.EmStockWatchListResp
	(*Empty)(nil),                        // 16: efinance.Empty
	(*IDInt32Req)(nil),                   // 17: efinance.IDInt32Req
	(*IDInt64Req)(nil),                   // 18: efinance.IDInt64Req
	(*IDReq)(nil),                        // 19: efinance.IDReq
	(*IDStringReq)(nil),                  // 20: efinance.IDStringReq
	(*IDUint32Req)(nil),                  // 21: efinance.IDUint32Req
	(*IDsInt32Req)(nil),                  // 22: efinance.IDsInt32Req
	(*IDsInt64Req)(nil),                  // 23: efinance.IDsInt64Req
	(*IDsReq)(nil),                       // 24: efinance.IDsReq
	(*IDsStringReq)(nil),                 // 25: efinance.IDsStringReq
	(*IDsUint32Req)(nil),                 // 26: efinance.IDsUint32Req
	(*PageInfoReq)(nil),                  // 27: efinance.PageInfoReq
	(*UUIDReq)(nil),                      // 28: efinance.UUIDReq
	(*UUIDsReq)(nil),                     // 29: efinance.UUIDsReq
}
var file_efinance_proto_depIdxs = []int32{
	7,  // 0: efinance.EmFinancialIndicatorListResp.data:type_name -> efinance.EmFinancialIndicatorInfo
	10, // 1: efinance.EmStockBasicInfoListResp.data:type_name -> efinance.EmStockBasicInfoInfo
	13, // 2: efinance.EmStockWatchListResp.data:type_name -> efinance.EmStockWatchInfo
	16, // 3: efinance.Efinance.initDatabase:input_type -> efinance.Empty
	7,  // 4: efinance.Efinance.createEmFinancialIndicator:input_type -> efinance.EmFinancialIndicatorInfo
	7,  // 5: efinance.Efinance.updateEmFinancialIndicator:input_type -> efinance.EmFinancialIndicatorInfo
	8,  // 6: efinance.Efinance.getEmFinancialIndicatorList:input_type -> efinance.EmFinancialIndicatorListReq
	17, // 7: efinance.Efinance.getEmFinancialIndicatorById:input_type -> efinance.IDInt32Req
	22, // 8: efinance.Efinance.deleteEmFinancialIndicator:input_type -> efinance.IDsInt32Req
	10, // 9: efinance.Efinance.createEmStockBasicInfo:input_type -> efinance.EmStockBasicInfoInfo
	10, // 10: efinance.Efinance.updateEmStockBasicInfo:input_type -> efinance.EmStockBasicInfoInfo
	11, // 11: efinance.Efinance.getEmStockBasicInfoList:input_type -> efinance.EmStockBasicInfoListReq
	17, // 12: efinance.Efinance.getEmStockBasicInfoById:input_type -> efinance.IDInt32Req
	22, // 13: efinance.Efinance.deleteEmStockBasicInfo:input_type -> efinance.IDsInt32Req
	13, // 14: efinance.Efinance.createEmStockWatch:input_type -> efinance.EmStockWatchInfo
	13, // 15: efinance.Efinance.updateEmStockWatch:input_type -> efinance.EmStockWatchInfo
	14, // 16: efinance.Efinance.getEmStockWatchList:input_type -> efinance.EmStockWatchListReq
	17, // 17: efinance.Efinance.getEmStockWatchById:input_type -> efinance.IDInt32Req
	22, // 18: efinance.Efinance.deleteEmStockWatch:input_type -> efinance.IDsInt32Req
	5,  // 19: efinance.Efinance.initDatabase:output_type -> efinance.BaseResp
	0,  // 20: efinance.Efinance.createEmFinancialIndicator:output_type -> efinance.BaseIDInt32Resp
	5,  // 21: efinance.Efinance.updateEmFinancialIndicator:output_type -> efinance.BaseResp
	9,  // 22: efinance.Efinance.getEmFinancialIndicatorList:output_type -> efinance.EmFinancialIndicatorListResp
	7,  // 23: efinance.Efinance.getEmFinancialIndicatorById:output_type -> efinance.EmFinancialIndicatorInfo
	5,  // 24: efinance.Efinance.deleteEmFinancialIndicator:output_type -> efinance.BaseResp
	0,  // 25: efinance.Efinance.createEmStockBasicInfo:output_type -> efinance.BaseIDInt32Resp
	5,  // 26: efinance.Efinance.updateEmStockBasicInfo:output_type -> efinance.BaseResp
	12, // 27: efinance.Efinance.getEmStockBasicInfoList:output_type -> efinance.EmStockBasicInfoListResp
	10, // 28: efinance.Efinance.getEmStockBasicInfoById:output_type -> efinance.EmStockBasicInfoInfo
	5,  // 29: efinance.Efinance.deleteEmStockBasicInfo:output_type -> efinance.BaseResp
	0,  // 30: efinance.Efinance.createEmStockWatch:output_type -> efinance.BaseIDInt32Resp
	5,  // 31: efinance.Efinance.updateEmStockWatch:output_type -> efinance.BaseResp
	15, // 32: efinance.Efinance.getEmStockWatchList:output_type -> efinance.EmStockWatchListResp
	13, // 33: efinance.Efinance.getEmStockWatchById:output_type -> efinance.EmStockWatchInfo
	5,  // 34: efinance.Efinance.deleteEmStockWatch:output_type -> efinance.BaseResp
	19, // [19:35] is the sub-list for method output_type
	3,  // [3:19] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_efinance_proto_init() }
func file_efinance_proto_init() {
	if File_efinance_proto != nil {
		return
	}
	file_efinance_proto_msgTypes[7].OneofWrappers = []any{}
	file_efinance_proto_msgTypes[8].OneofWrappers = []any{}
	file_efinance_proto_msgTypes[10].OneofWrappers = []any{}
	file_efinance_proto_msgTypes[11].OneofWrappers = []any{}
	file_efinance_proto_msgTypes[13].OneofWrappers = []any{}
	file_efinance_proto_msgTypes[14].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_efinance_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_efinance_proto_goTypes,
		DependencyIndexes: file_efinance_proto_depIdxs,
		MessageInfos:      file_efinance_proto_msgTypes,
	}.Build()
	File_efinance_proto = out.File
	file_efinance_proto_rawDesc = nil
	file_efinance_proto_goTypes = nil
	file_efinance_proto_depIdxs = nil
}
