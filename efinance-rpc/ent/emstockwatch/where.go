// Code generated by ent, DO NOT EDIT.

package emstockwatch

import (
	"entgo.io/ent/dialect/sql"
	"github.com/suyuan32/simple-admin-efinance-rpc/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int32) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int32) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int32) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int32) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int32) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int32) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int32) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int32) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int32) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldLTE(FieldID, id))
}

// StockWatchCode applies equality check predicate on the "stock_watch_code" field. It's identical to StockWatchCodeEQ.
func StockWatchCode(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldEQ(FieldStockWatchCode, v))
}

// StockWatchName applies equality check predicate on the "stock_watch_name" field. It's identical to StockWatchNameEQ.
func StockWatchName(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldEQ(FieldStockWatchName, v))
}

// StockWatchUpPrice applies equality check predicate on the "stock_watch_up_price" field. It's identical to StockWatchUpPriceEQ.
func StockWatchUpPrice(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldEQ(FieldStockWatchUpPrice, v))
}

// StockWatchFallPrice applies equality check predicate on the "stock_watch_fall_price" field. It's identical to StockWatchFallPriceEQ.
func StockWatchFallPrice(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldEQ(FieldStockWatchFallPrice, v))
}

// StockWatchUpChange applies equality check predicate on the "stock_watch_up_change" field. It's identical to StockWatchUpChangeEQ.
func StockWatchUpChange(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldEQ(FieldStockWatchUpChange, v))
}

// StockWatchFallChange applies equality check predicate on the "stock_watch_fall_change" field. It's identical to StockWatchFallChangeEQ.
func StockWatchFallChange(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldEQ(FieldStockWatchFallChange, v))
}

// StockWatchCodeEQ applies the EQ predicate on the "stock_watch_code" field.
func StockWatchCodeEQ(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldEQ(FieldStockWatchCode, v))
}

// StockWatchCodeNEQ applies the NEQ predicate on the "stock_watch_code" field.
func StockWatchCodeNEQ(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldNEQ(FieldStockWatchCode, v))
}

// StockWatchCodeIn applies the In predicate on the "stock_watch_code" field.
func StockWatchCodeIn(vs ...string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldIn(FieldStockWatchCode, vs...))
}

// StockWatchCodeNotIn applies the NotIn predicate on the "stock_watch_code" field.
func StockWatchCodeNotIn(vs ...string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldNotIn(FieldStockWatchCode, vs...))
}

// StockWatchCodeGT applies the GT predicate on the "stock_watch_code" field.
func StockWatchCodeGT(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldGT(FieldStockWatchCode, v))
}

// StockWatchCodeGTE applies the GTE predicate on the "stock_watch_code" field.
func StockWatchCodeGTE(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldGTE(FieldStockWatchCode, v))
}

// StockWatchCodeLT applies the LT predicate on the "stock_watch_code" field.
func StockWatchCodeLT(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldLT(FieldStockWatchCode, v))
}

// StockWatchCodeLTE applies the LTE predicate on the "stock_watch_code" field.
func StockWatchCodeLTE(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldLTE(FieldStockWatchCode, v))
}

// StockWatchCodeContains applies the Contains predicate on the "stock_watch_code" field.
func StockWatchCodeContains(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldContains(FieldStockWatchCode, v))
}

// StockWatchCodeHasPrefix applies the HasPrefix predicate on the "stock_watch_code" field.
func StockWatchCodeHasPrefix(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldHasPrefix(FieldStockWatchCode, v))
}

// StockWatchCodeHasSuffix applies the HasSuffix predicate on the "stock_watch_code" field.
func StockWatchCodeHasSuffix(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldHasSuffix(FieldStockWatchCode, v))
}

// StockWatchCodeIsNil applies the IsNil predicate on the "stock_watch_code" field.
func StockWatchCodeIsNil() predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldIsNull(FieldStockWatchCode))
}

// StockWatchCodeNotNil applies the NotNil predicate on the "stock_watch_code" field.
func StockWatchCodeNotNil() predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldNotNull(FieldStockWatchCode))
}

// StockWatchCodeEqualFold applies the EqualFold predicate on the "stock_watch_code" field.
func StockWatchCodeEqualFold(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldEqualFold(FieldStockWatchCode, v))
}

// StockWatchCodeContainsFold applies the ContainsFold predicate on the "stock_watch_code" field.
func StockWatchCodeContainsFold(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldContainsFold(FieldStockWatchCode, v))
}

// StockWatchNameEQ applies the EQ predicate on the "stock_watch_name" field.
func StockWatchNameEQ(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldEQ(FieldStockWatchName, v))
}

// StockWatchNameNEQ applies the NEQ predicate on the "stock_watch_name" field.
func StockWatchNameNEQ(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldNEQ(FieldStockWatchName, v))
}

// StockWatchNameIn applies the In predicate on the "stock_watch_name" field.
func StockWatchNameIn(vs ...string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldIn(FieldStockWatchName, vs...))
}

// StockWatchNameNotIn applies the NotIn predicate on the "stock_watch_name" field.
func StockWatchNameNotIn(vs ...string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldNotIn(FieldStockWatchName, vs...))
}

// StockWatchNameGT applies the GT predicate on the "stock_watch_name" field.
func StockWatchNameGT(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldGT(FieldStockWatchName, v))
}

// StockWatchNameGTE applies the GTE predicate on the "stock_watch_name" field.
func StockWatchNameGTE(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldGTE(FieldStockWatchName, v))
}

// StockWatchNameLT applies the LT predicate on the "stock_watch_name" field.
func StockWatchNameLT(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldLT(FieldStockWatchName, v))
}

// StockWatchNameLTE applies the LTE predicate on the "stock_watch_name" field.
func StockWatchNameLTE(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldLTE(FieldStockWatchName, v))
}

// StockWatchNameContains applies the Contains predicate on the "stock_watch_name" field.
func StockWatchNameContains(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldContains(FieldStockWatchName, v))
}

// StockWatchNameHasPrefix applies the HasPrefix predicate on the "stock_watch_name" field.
func StockWatchNameHasPrefix(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldHasPrefix(FieldStockWatchName, v))
}

// StockWatchNameHasSuffix applies the HasSuffix predicate on the "stock_watch_name" field.
func StockWatchNameHasSuffix(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldHasSuffix(FieldStockWatchName, v))
}

// StockWatchNameIsNil applies the IsNil predicate on the "stock_watch_name" field.
func StockWatchNameIsNil() predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldIsNull(FieldStockWatchName))
}

// StockWatchNameNotNil applies the NotNil predicate on the "stock_watch_name" field.
func StockWatchNameNotNil() predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldNotNull(FieldStockWatchName))
}

// StockWatchNameEqualFold applies the EqualFold predicate on the "stock_watch_name" field.
func StockWatchNameEqualFold(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldEqualFold(FieldStockWatchName, v))
}

// StockWatchNameContainsFold applies the ContainsFold predicate on the "stock_watch_name" field.
func StockWatchNameContainsFold(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldContainsFold(FieldStockWatchName, v))
}

// StockWatchUpPriceEQ applies the EQ predicate on the "stock_watch_up_price" field.
func StockWatchUpPriceEQ(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldEQ(FieldStockWatchUpPrice, v))
}

// StockWatchUpPriceNEQ applies the NEQ predicate on the "stock_watch_up_price" field.
func StockWatchUpPriceNEQ(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldNEQ(FieldStockWatchUpPrice, v))
}

// StockWatchUpPriceIn applies the In predicate on the "stock_watch_up_price" field.
func StockWatchUpPriceIn(vs ...string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldIn(FieldStockWatchUpPrice, vs...))
}

// StockWatchUpPriceNotIn applies the NotIn predicate on the "stock_watch_up_price" field.
func StockWatchUpPriceNotIn(vs ...string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldNotIn(FieldStockWatchUpPrice, vs...))
}

// StockWatchUpPriceGT applies the GT predicate on the "stock_watch_up_price" field.
func StockWatchUpPriceGT(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldGT(FieldStockWatchUpPrice, v))
}

// StockWatchUpPriceGTE applies the GTE predicate on the "stock_watch_up_price" field.
func StockWatchUpPriceGTE(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldGTE(FieldStockWatchUpPrice, v))
}

// StockWatchUpPriceLT applies the LT predicate on the "stock_watch_up_price" field.
func StockWatchUpPriceLT(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldLT(FieldStockWatchUpPrice, v))
}

// StockWatchUpPriceLTE applies the LTE predicate on the "stock_watch_up_price" field.
func StockWatchUpPriceLTE(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldLTE(FieldStockWatchUpPrice, v))
}

// StockWatchUpPriceContains applies the Contains predicate on the "stock_watch_up_price" field.
func StockWatchUpPriceContains(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldContains(FieldStockWatchUpPrice, v))
}

// StockWatchUpPriceHasPrefix applies the HasPrefix predicate on the "stock_watch_up_price" field.
func StockWatchUpPriceHasPrefix(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldHasPrefix(FieldStockWatchUpPrice, v))
}

// StockWatchUpPriceHasSuffix applies the HasSuffix predicate on the "stock_watch_up_price" field.
func StockWatchUpPriceHasSuffix(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldHasSuffix(FieldStockWatchUpPrice, v))
}

// StockWatchUpPriceIsNil applies the IsNil predicate on the "stock_watch_up_price" field.
func StockWatchUpPriceIsNil() predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldIsNull(FieldStockWatchUpPrice))
}

// StockWatchUpPriceNotNil applies the NotNil predicate on the "stock_watch_up_price" field.
func StockWatchUpPriceNotNil() predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldNotNull(FieldStockWatchUpPrice))
}

// StockWatchUpPriceEqualFold applies the EqualFold predicate on the "stock_watch_up_price" field.
func StockWatchUpPriceEqualFold(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldEqualFold(FieldStockWatchUpPrice, v))
}

// StockWatchUpPriceContainsFold applies the ContainsFold predicate on the "stock_watch_up_price" field.
func StockWatchUpPriceContainsFold(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldContainsFold(FieldStockWatchUpPrice, v))
}

// StockWatchFallPriceEQ applies the EQ predicate on the "stock_watch_fall_price" field.
func StockWatchFallPriceEQ(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldEQ(FieldStockWatchFallPrice, v))
}

// StockWatchFallPriceNEQ applies the NEQ predicate on the "stock_watch_fall_price" field.
func StockWatchFallPriceNEQ(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldNEQ(FieldStockWatchFallPrice, v))
}

// StockWatchFallPriceIn applies the In predicate on the "stock_watch_fall_price" field.
func StockWatchFallPriceIn(vs ...string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldIn(FieldStockWatchFallPrice, vs...))
}

// StockWatchFallPriceNotIn applies the NotIn predicate on the "stock_watch_fall_price" field.
func StockWatchFallPriceNotIn(vs ...string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldNotIn(FieldStockWatchFallPrice, vs...))
}

// StockWatchFallPriceGT applies the GT predicate on the "stock_watch_fall_price" field.
func StockWatchFallPriceGT(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldGT(FieldStockWatchFallPrice, v))
}

// StockWatchFallPriceGTE applies the GTE predicate on the "stock_watch_fall_price" field.
func StockWatchFallPriceGTE(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldGTE(FieldStockWatchFallPrice, v))
}

// StockWatchFallPriceLT applies the LT predicate on the "stock_watch_fall_price" field.
func StockWatchFallPriceLT(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldLT(FieldStockWatchFallPrice, v))
}

// StockWatchFallPriceLTE applies the LTE predicate on the "stock_watch_fall_price" field.
func StockWatchFallPriceLTE(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldLTE(FieldStockWatchFallPrice, v))
}

// StockWatchFallPriceContains applies the Contains predicate on the "stock_watch_fall_price" field.
func StockWatchFallPriceContains(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldContains(FieldStockWatchFallPrice, v))
}

// StockWatchFallPriceHasPrefix applies the HasPrefix predicate on the "stock_watch_fall_price" field.
func StockWatchFallPriceHasPrefix(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldHasPrefix(FieldStockWatchFallPrice, v))
}

// StockWatchFallPriceHasSuffix applies the HasSuffix predicate on the "stock_watch_fall_price" field.
func StockWatchFallPriceHasSuffix(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldHasSuffix(FieldStockWatchFallPrice, v))
}

// StockWatchFallPriceIsNil applies the IsNil predicate on the "stock_watch_fall_price" field.
func StockWatchFallPriceIsNil() predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldIsNull(FieldStockWatchFallPrice))
}

// StockWatchFallPriceNotNil applies the NotNil predicate on the "stock_watch_fall_price" field.
func StockWatchFallPriceNotNil() predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldNotNull(FieldStockWatchFallPrice))
}

// StockWatchFallPriceEqualFold applies the EqualFold predicate on the "stock_watch_fall_price" field.
func StockWatchFallPriceEqualFold(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldEqualFold(FieldStockWatchFallPrice, v))
}

// StockWatchFallPriceContainsFold applies the ContainsFold predicate on the "stock_watch_fall_price" field.
func StockWatchFallPriceContainsFold(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldContainsFold(FieldStockWatchFallPrice, v))
}

// StockWatchUpChangeEQ applies the EQ predicate on the "stock_watch_up_change" field.
func StockWatchUpChangeEQ(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldEQ(FieldStockWatchUpChange, v))
}

// StockWatchUpChangeNEQ applies the NEQ predicate on the "stock_watch_up_change" field.
func StockWatchUpChangeNEQ(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldNEQ(FieldStockWatchUpChange, v))
}

// StockWatchUpChangeIn applies the In predicate on the "stock_watch_up_change" field.
func StockWatchUpChangeIn(vs ...string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldIn(FieldStockWatchUpChange, vs...))
}

// StockWatchUpChangeNotIn applies the NotIn predicate on the "stock_watch_up_change" field.
func StockWatchUpChangeNotIn(vs ...string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldNotIn(FieldStockWatchUpChange, vs...))
}

// StockWatchUpChangeGT applies the GT predicate on the "stock_watch_up_change" field.
func StockWatchUpChangeGT(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldGT(FieldStockWatchUpChange, v))
}

// StockWatchUpChangeGTE applies the GTE predicate on the "stock_watch_up_change" field.
func StockWatchUpChangeGTE(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldGTE(FieldStockWatchUpChange, v))
}

// StockWatchUpChangeLT applies the LT predicate on the "stock_watch_up_change" field.
func StockWatchUpChangeLT(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldLT(FieldStockWatchUpChange, v))
}

// StockWatchUpChangeLTE applies the LTE predicate on the "stock_watch_up_change" field.
func StockWatchUpChangeLTE(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldLTE(FieldStockWatchUpChange, v))
}

// StockWatchUpChangeContains applies the Contains predicate on the "stock_watch_up_change" field.
func StockWatchUpChangeContains(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldContains(FieldStockWatchUpChange, v))
}

// StockWatchUpChangeHasPrefix applies the HasPrefix predicate on the "stock_watch_up_change" field.
func StockWatchUpChangeHasPrefix(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldHasPrefix(FieldStockWatchUpChange, v))
}

// StockWatchUpChangeHasSuffix applies the HasSuffix predicate on the "stock_watch_up_change" field.
func StockWatchUpChangeHasSuffix(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldHasSuffix(FieldStockWatchUpChange, v))
}

// StockWatchUpChangeIsNil applies the IsNil predicate on the "stock_watch_up_change" field.
func StockWatchUpChangeIsNil() predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldIsNull(FieldStockWatchUpChange))
}

// StockWatchUpChangeNotNil applies the NotNil predicate on the "stock_watch_up_change" field.
func StockWatchUpChangeNotNil() predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldNotNull(FieldStockWatchUpChange))
}

// StockWatchUpChangeEqualFold applies the EqualFold predicate on the "stock_watch_up_change" field.
func StockWatchUpChangeEqualFold(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldEqualFold(FieldStockWatchUpChange, v))
}

// StockWatchUpChangeContainsFold applies the ContainsFold predicate on the "stock_watch_up_change" field.
func StockWatchUpChangeContainsFold(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldContainsFold(FieldStockWatchUpChange, v))
}

// StockWatchFallChangeEQ applies the EQ predicate on the "stock_watch_fall_change" field.
func StockWatchFallChangeEQ(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldEQ(FieldStockWatchFallChange, v))
}

// StockWatchFallChangeNEQ applies the NEQ predicate on the "stock_watch_fall_change" field.
func StockWatchFallChangeNEQ(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldNEQ(FieldStockWatchFallChange, v))
}

// StockWatchFallChangeIn applies the In predicate on the "stock_watch_fall_change" field.
func StockWatchFallChangeIn(vs ...string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldIn(FieldStockWatchFallChange, vs...))
}

// StockWatchFallChangeNotIn applies the NotIn predicate on the "stock_watch_fall_change" field.
func StockWatchFallChangeNotIn(vs ...string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldNotIn(FieldStockWatchFallChange, vs...))
}

// StockWatchFallChangeGT applies the GT predicate on the "stock_watch_fall_change" field.
func StockWatchFallChangeGT(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldGT(FieldStockWatchFallChange, v))
}

// StockWatchFallChangeGTE applies the GTE predicate on the "stock_watch_fall_change" field.
func StockWatchFallChangeGTE(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldGTE(FieldStockWatchFallChange, v))
}

// StockWatchFallChangeLT applies the LT predicate on the "stock_watch_fall_change" field.
func StockWatchFallChangeLT(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldLT(FieldStockWatchFallChange, v))
}

// StockWatchFallChangeLTE applies the LTE predicate on the "stock_watch_fall_change" field.
func StockWatchFallChangeLTE(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldLTE(FieldStockWatchFallChange, v))
}

// StockWatchFallChangeContains applies the Contains predicate on the "stock_watch_fall_change" field.
func StockWatchFallChangeContains(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldContains(FieldStockWatchFallChange, v))
}

// StockWatchFallChangeHasPrefix applies the HasPrefix predicate on the "stock_watch_fall_change" field.
func StockWatchFallChangeHasPrefix(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldHasPrefix(FieldStockWatchFallChange, v))
}

// StockWatchFallChangeHasSuffix applies the HasSuffix predicate on the "stock_watch_fall_change" field.
func StockWatchFallChangeHasSuffix(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldHasSuffix(FieldStockWatchFallChange, v))
}

// StockWatchFallChangeIsNil applies the IsNil predicate on the "stock_watch_fall_change" field.
func StockWatchFallChangeIsNil() predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldIsNull(FieldStockWatchFallChange))
}

// StockWatchFallChangeNotNil applies the NotNil predicate on the "stock_watch_fall_change" field.
func StockWatchFallChangeNotNil() predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldNotNull(FieldStockWatchFallChange))
}

// StockWatchFallChangeEqualFold applies the EqualFold predicate on the "stock_watch_fall_change" field.
func StockWatchFallChangeEqualFold(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldEqualFold(FieldStockWatchFallChange, v))
}

// StockWatchFallChangeContainsFold applies the ContainsFold predicate on the "stock_watch_fall_change" field.
func StockWatchFallChangeContainsFold(v string) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.FieldContainsFold(FieldStockWatchFallChange, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.EmStockWatch) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.EmStockWatch) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.EmStockWatch) predicate.EmStockWatch {
	return predicate.EmStockWatch(sql.NotPredicates(p))
}
