// Code generated by goctl. DO NOT EDIT.
// Source: efinance.proto

package server

import (
	"context"

	"github.com/suyuan32/simple-admin-efinance-rpc/internal/logic/base"
	"github.com/suyuan32/simple-admin-efinance-rpc/internal/logic/emfinancialindicator"
	"github.com/suyuan32/simple-admin-efinance-rpc/internal/logic/emstockbasicinfo"
	"github.com/suyuan32/simple-admin-efinance-rpc/internal/logic/emstockwatch"
	"github.com/suyuan32/simple-admin-efinance-rpc/internal/svc"
	"github.com/suyuan32/simple-admin-efinance-rpc/types/efinance"
)

type EfinanceServer struct {
	svcCtx *svc.ServiceContext
	efinance.UnimplementedEfinanceServer
}

func NewEfinanceServer(svcCtx *svc.ServiceContext) *EfinanceServer {
	return &EfinanceServer{
		svcCtx: svcCtx,
	}
}

func (s *EfinanceServer) InitDatabase(ctx context.Context, in *efinance.Empty) (*efinance.BaseResp, error) {
	l := base.NewInitDatabaseLogic(ctx, s.svcCtx)
	return l.InitDatabase(in)
}

// EmFinancialIndicator management
func (s *EfinanceServer) CreateEmFinancialIndicator(ctx context.Context, in *efinance.EmFinancialIndicatorInfo) (*efinance.BaseIDInt32Resp, error) {
	l := emfinancialindicator.NewCreateEmFinancialIndicatorLogic(ctx, s.svcCtx)
	return l.CreateEmFinancialIndicator(in)
}

func (s *EfinanceServer) UpdateEmFinancialIndicator(ctx context.Context, in *efinance.EmFinancialIndicatorInfo) (*efinance.BaseResp, error) {
	l := emfinancialindicator.NewUpdateEmFinancialIndicatorLogic(ctx, s.svcCtx)
	return l.UpdateEmFinancialIndicator(in)
}

func (s *EfinanceServer) GetEmFinancialIndicatorList(ctx context.Context, in *efinance.EmFinancialIndicatorListReq) (*efinance.EmFinancialIndicatorListResp, error) {
	l := emfinancialindicator.NewGetEmFinancialIndicatorListLogic(ctx, s.svcCtx)
	return l.GetEmFinancialIndicatorList(in)
}

func (s *EfinanceServer) GetEmFinancialIndicatorById(ctx context.Context, in *efinance.IDInt32Req) (*efinance.EmFinancialIndicatorInfo, error) {
	l := emfinancialindicator.NewGetEmFinancialIndicatorByIdLogic(ctx, s.svcCtx)
	return l.GetEmFinancialIndicatorById(in)
}

func (s *EfinanceServer) DeleteEmFinancialIndicator(ctx context.Context, in *efinance.IDsInt32Req) (*efinance.BaseResp, error) {
	l := emfinancialindicator.NewDeleteEmFinancialIndicatorLogic(ctx, s.svcCtx)
	return l.DeleteEmFinancialIndicator(in)
}

// EmStockBasicInfo management
func (s *EfinanceServer) CreateEmStockBasicInfo(ctx context.Context, in *efinance.EmStockBasicInfoInfo) (*efinance.BaseIDInt32Resp, error) {
	l := emstockbasicinfo.NewCreateEmStockBasicInfoLogic(ctx, s.svcCtx)
	return l.CreateEmStockBasicInfo(in)
}

func (s *EfinanceServer) UpdateEmStockBasicInfo(ctx context.Context, in *efinance.EmStockBasicInfoInfo) (*efinance.BaseResp, error) {
	l := emstockbasicinfo.NewUpdateEmStockBasicInfoLogic(ctx, s.svcCtx)
	return l.UpdateEmStockBasicInfo(in)
}

func (s *EfinanceServer) GetEmStockBasicInfoList(ctx context.Context, in *efinance.EmStockBasicInfoListReq) (*efinance.EmStockBasicInfoListResp, error) {
	l := emstockbasicinfo.NewGetEmStockBasicInfoListLogic(ctx, s.svcCtx)
	return l.GetEmStockBasicInfoList(in)
}

func (s *EfinanceServer) GetEmStockBasicInfoById(ctx context.Context, in *efinance.IDInt32Req) (*efinance.EmStockBasicInfoInfo, error) {
	l := emstockbasicinfo.NewGetEmStockBasicInfoByIdLogic(ctx, s.svcCtx)
	return l.GetEmStockBasicInfoById(in)
}

func (s *EfinanceServer) DeleteEmStockBasicInfo(ctx context.Context, in *efinance.IDsInt32Req) (*efinance.BaseResp, error) {
	l := emstockbasicinfo.NewDeleteEmStockBasicInfoLogic(ctx, s.svcCtx)
	return l.DeleteEmStockBasicInfo(in)
}

// EmStockWatch management
func (s *EfinanceServer) CreateEmStockWatch(ctx context.Context, in *efinance.EmStockWatchInfo) (*efinance.BaseIDInt32Resp, error) {
	l := emstockwatch.NewCreateEmStockWatchLogic(ctx, s.svcCtx)
	return l.CreateEmStockWatch(in)
}

func (s *EfinanceServer) UpdateEmStockWatch(ctx context.Context, in *efinance.EmStockWatchInfo) (*efinance.BaseResp, error) {
	l := emstockwatch.NewUpdateEmStockWatchLogic(ctx, s.svcCtx)
	return l.UpdateEmStockWatch(in)
}

func (s *EfinanceServer) GetEmStockWatchList(ctx context.Context, in *efinance.EmStockWatchListReq) (*efinance.EmStockWatchListResp, error) {
	l := emstockwatch.NewGetEmStockWatchListLogic(ctx, s.svcCtx)
	return l.GetEmStockWatchList(in)
}

func (s *EfinanceServer) GetEmStockWatchById(ctx context.Context, in *efinance.IDInt32Req) (*efinance.EmStockWatchInfo, error) {
	l := emstockwatch.NewGetEmStockWatchByIdLogic(ctx, s.svcCtx)
	return l.GetEmStockWatchById(in)
}

func (s *EfinanceServer) DeleteEmStockWatch(ctx context.Context, in *efinance.IDsInt32Req) (*efinance.BaseResp, error) {
	l := emstockwatch.NewDeleteEmStockWatchLogic(ctx, s.svcCtx)
	return l.DeleteEmStockWatch(in)
}
